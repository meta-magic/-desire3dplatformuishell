"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
exports.__esModule = true;
/**
 * Created by pratik on 23/2/18.
 */
var core_1 = require("@angular/core");
var NumberFieldPropertyComponent = (function () {
    function NumberFieldPropertyComponent() {
    }
    NumberFieldPropertyComponent.prototype.ngOnInit = function () { };
    NumberFieldPropertyComponent.prototype.propertyValidation = function () {
        this.componentInstance._eventHndl.componentValidation(this.componentInstance);
    };
    return NumberFieldPropertyComponent;
}());
NumberFieldPropertyComponent = __decorate([
    core_1.Component({
        selector: 'numberfield-property',
        template: "\n\n       <ng-container *ngIf=\"componentInstance\">\n\n         <amexio-text-input field-label=\"Name\" [(ngModel)]=\"componentInstance.properties.name\"\n                            name=\"componentInstance.properties.name\"\n                            place-holder=\"name\"\n                            icon-feedback=\"true\" (onBlur)=\"propertyValidation()\">\n         </amexio-text-input>\n         \n         <amexio-text-input field-label=\"Label\" [(ngModel)]=\"componentInstance.properties.fieldLabel\"\n                            name=\"componentInstance.properties.fieldLabel\"\n                            place-holder=\"label\"  (onBlur)=\"propertyValidation()\">\n         </amexio-text-input>\n         <amexio-text-input field-label=\"Placeholder\" [(ngModel)]=\"componentInstance.properties.placeholder\"\n                            name=\"componentInstance.properties.fieldLabel\"\n                            place-holder=\"placeholder\"\n                            icon-feedback=\"true\" [allow-blank]=\"true\">\n         </amexio-text-input>\n         \n         <amexio-text-input [field-label]=\"'Error Message'\" name =\"componentInstance.properties.errorMsg\"\n                            [place-holder]=\"'error message'\" [allow-blank]=\"true\" [(ngModel)]=\"componentInstance.properties.errorMsg\">\n         </amexio-text-input>\n\n         <amexio-number-input [field-label]=\"'Min Value'\" place-holder=\"min value\" name =\"componentInstance.properties.minValue\"\n                              [allow-blank]=\"true\" [(ngModel)]=\"componentInstance.properties.minValue\">\n         </amexio-number-input>\n\n         <amexio-text-input [field-label]=\"'Min Error Message'\" [allow-blank]=\"true\" name =\"componentInstance.properties.minErrorMsg\"\n                            [place-holder]=\"'min error message'\" [(ngModel)]=\"componentInstance.properties.minErrorMsg\">\n         </amexio-text-input>\n\n         <amexio-number-input [field-label]=\"'Max Value'\" place-holder=\"max value\" [allow-blank]=\"true\" name =\"componentInstance.properties.maxValue\" [(ngModel)]=\"componentInstance.properties.maxValue\">\n         </amexio-number-input>\n\n         <amexio-text-input [field-label]=\"'Max Error Message'\" [allow-blank]=\"true\" name =\"componentInstance.properties.maxErrorMsg\"\n                            [place-holder]=\"'max error message'\" [(ngModel)]=\"componentInstance.properties.maxErrorMsg\">\n         </amexio-text-input>\n\n         <amexio-text-input [field-label]=\"'Font Size'\" [allow-blank]=\"true\"\n                            [(ngModel)]=\"componentInstance.properties.fontSize\"\n                            place-holder=\"font size\">\n         </amexio-text-input>\n\n         <amexio-text-input [field-label]=\"'Font Family'\" [allow-blank]=\"true\" name =\"componentInstance.properties.maxErrorMsg\"\n                            [(ngModel)]=\"componentInstance.properties.fontFamily\"\n                            place-holder=\"font family\">\n         </amexio-text-input>\n\n         <amexio-text-input [field-label]=\"'Font Style'\" [allow-blank]=\"true\" name =\"componentInstance.properties.maxErrorMsg\"\n                            [(ngModel)]=\"componentInstance.properties.fontStyle\"\n                            place-holder=\"font style\">\n         </amexio-text-input>\n\n\n         <amexio-checkbox [field-label]=\"'Has Label'\"\n                             [(ngModel)]=\"componentInstance.properties.hasLabel\">\n         </amexio-checkbox>\n         <amexio-checkbox [field-label]=\"'Allow Blank'\"\n                          [(ngModel)]=\"componentInstance.properties.allowBlank\">\n         </amexio-checkbox>\n         <amexio-checkbox [field-label]=\"'Icon FeedBack'\"\n                          [(ngModel)]=\"componentInstance.properties.iconFeedBack\">\n         </amexio-checkbox>\n\n         <amexio-checkbox [field-label]=\"'Disabled'\"\n                          [(ngModel)]=\"componentInstance.properties.disabled\">\n         </amexio-checkbox>\n\n         <amexio-checkbox [field-label]=\"'Enable Popover'\"  \n                          [(ngModel)]=\"componentInstance.properties.enablePopOver\">\n         </amexio-checkbox>\n         \n\n       </ng-container>\n   <!--  <amexio-tab [icon]=\"componentInstance._eventHndl._sharedDataService.behaviourIcon\">\n       <ng-container *ngIf=\"componentInstance\">\n         <show-event-list [componentInstance]=\"componentInstance\"></show-event-list>\n       </ng-container>\n     </amexio-tab>-->\n\n "
    })
], NumberFieldPropertyComponent);
exports.NumberFieldPropertyComponent = NumberFieldPropertyComponent;
