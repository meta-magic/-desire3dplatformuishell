"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
exports.__esModule = true;
/**
 * Created by dattaram on 14/2/18.
 */
var core_1 = require("@angular/core");
var TextInputPropertyComponent = (function () {
    function TextInputPropertyComponent() {
    }
    TextInputPropertyComponent.prototype.ngOnInit = function () { };
    TextInputPropertyComponent.prototype.propertyValidation = function () {
        this.componentInstance._eventHndl.componentValidation(this.componentInstance);
    };
    return TextInputPropertyComponent;
}());
TextInputPropertyComponent = __decorate([
    core_1.Component({
        selector: 'text-input-property',
        template: "\n    <ng-container *ngIf=\"componentInstance\">\n      <amexio-text-input field-label=\"Name\" [(ngModel)]=\"componentInstance.properties.name\"\n                         name=\"componentInstance.properties.name\"\n                         place-holder=\"name\"\n                         icon-feedback=\"true\"\n                         (onBlur)=\"propertyValidation()\">\n      </amexio-text-input>\n      <amexio-text-input field-label=\"Field Label\" [(ngModel)]=\"componentInstance.properties.fieldLabel\"\n                         name=\"componentInstance.properties.fieldLabel\"\n                         place-holder=\"label\"\n                         icon-feedback=\"false\" [allow-blank]=\"true\">\n      </amexio-text-input>\n      <amexio-text-input field-label=\"Placeholder\" [(ngModel)]=\"componentInstance.properties.placeholder\"\n                         name=\"componentInstance.properties.fieldLabel\"\n                         place-holder=\"placeholder\"\n                         icon-feedback=\"false\" [allow-blank]=\"true\">\n      </amexio-text-input>\n      <amexio-text-input [field-label]=\"'Error Message'\" name =\"componentInstance.properties.errorMsg\"\n                         [place-holder]=\"'error message'\" [allow-blank]=\"true\" [(ngModel)]=\"componentInstance.properties.errormessage\">\n      </amexio-text-input>\n\n      <amexio-number-input [field-label]=\"'Min Length'\" name =\"componentInstance.properties.minLength\"\n                           [allow-blank]=\"true\" [(ngModel)]=\"componentInstance.properties.minLength\">\n      </amexio-number-input>\n\n      <amexio-text-input [field-label]=\"'Min Error Message'\" [allow-blank]=\"true\" name =\"componentInstance.properties.minErrorMsg\"\n                         [place-holder]=\"'min error message'\" [(ngModel)]=\"componentInstance.properties.minErrorMsg\">\n      </amexio-text-input>\n\n      <amexio-number-input [field-label]=\"'Max Length'\" [allow-blank]=\"true\" name =\"componentInstance.properties.maxLength\" [(ngModel)]=\"componentInstance.properties.maxLength\">\n      </amexio-number-input>\n\n      <amexio-text-input [field-label]=\"'Max Error Message'\" [allow-blank]=\"true\" name =\"componentInstance.properties.maxErrorMsg\"\n                         [place-holder]=\"'max error message'\" [(ngModel)]=\"componentInstance.properties.maxErrorMsg\">\n      </amexio-text-input>\n\n      <amexio-text-input [field-label]=\"'Pattern'\" [allow-blank]=\"true\" name =\"componentInstance.properties.pattern\"\n                         [place-holder]=\"'pattern'\" [(ngModel)]=\"componentInstance.properties.pattern\">\n      </amexio-text-input>\n\n      <amexio-number-input [field-label]=\"'Font Size'\" [allow-blank]=\"true\" name =\"componentInstance.properties.fontSize\"\n                           [(ngModel)]=\"componentInstance.properties.fontSize\"\n                           [place-holder]=\"'font size'\">\n      </amexio-number-input>\n\n      <amexio-text-input [field-label]=\"'Font Family'\" [allow-blank]=\"true\"\n                         [(ngModel)]=\"componentInstance.properties.fontFamily\"\n                         [place-holder]=\"'font family'\">\n      </amexio-text-input>\n\n      <amexio-text-input [field-label]=\"'Font Style'\" [allow-blank]=\"true\"\n                         [(ngModel)]=\"componentInstance.properties.fontStyle\"\n                         [place-holder]=\"'font style'\">\n      </amexio-text-input>\n\n      <amexio-checkbox    [field-label]=\"'Has Label'\"\n                          [(ngModel)]=\"componentInstance.properties.hasLabel\">\n      </amexio-checkbox>\n\n      <amexio-checkbox [field-label]=\"'Allow Blank'\"\n                       [(ngModel)]=\"componentInstance.properties.allowBlank\">\n      </amexio-checkbox>\n\n      <amexio-checkbox [field-label]=\"'Icon FeedBack'\"\n                       [(ngModel)]=\"componentInstance.properties.iconFeedBack\">\n      </amexio-checkbox>\n\n      <amexio-checkbox [field-label]=\"'Disabled'\"\n                       [(ngModel)]=\"componentInstance.properties.disabled\">\n      </amexio-checkbox>\n\n      <amexio-checkbox [field-label]=\"'Enable Popover'\"\n                       [(ngModel)]=\"componentInstance.properties.enablePopOver\">\n      </amexio-checkbox>\n\n\n    </ng-container>\n   <!-- <amexio-tab-view  [closable]=\"false\">\n                          <amexio-tab [icon]=\"componentInstance._eventHndl._sharedDataService.behaviourIcon\">\n                            <ng-container *ngIf=\"componentInstance\">\n                              <show-event-list [componentInstance]=\"componentInstance\"></show-event-list>\n                            </ng-container>\n                          </amexio-tab>\n    </amexio-tab-view>-->\n  \n  "
    })
], TextInputPropertyComponent);
exports.TextInputPropertyComponent = TextInputPropertyComponent;
